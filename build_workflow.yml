on: 
  push:
    branches-ignore: 
      - 'main'

jobs:
  # 1) Generate Matrix
  setup:
    name: Setup Matrix
    runs-on: ubuntu-latest
    outputs:
      build_config: ${{ steps.set.outputs.build_config }}
      publish_config: ${{ steps.set.outputs.publish_config }}
    steps:
        - uses: actions/checkout@v3

        - run: |
            cat build.json
            cat publish.json

        - id: set
          run: |
            echo "build_config=$(cat build.json | jq -c)" >> $GITHUB_OUTPUT
            echo "publish_config=$(cat publish.json | jq -c)" >> $GITHUB_OUTPUT


  # 2) Matrix Build
  build_matrix:
    needs: [setup]
    strategy:
      fail-fast: false
      matrix: 
        include: ${{ fromJson(needs.setup.outputs.build_config) }}
    runs-on: ${{ matrix.runner }}
    steps:
      # Checkout Build Scripts
      - uses: actions/checkout@v3
        with:
          ref: main

      # Checkout Source
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
          path: KOS

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Goto commit prior to our Actions additions
      - run: cd KOS && git reset HEAD^

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Container
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          provenance: false
          build-args: |
            CONFIG_FILE=${{ matrix.config }}
            BUILD_TYPE=kos
          tags: ${{ matrix.toolchain_tag }}
          cache-from: type=gha,scope=${{ matrix.cache }}
          cache-to: type=gha,scope=${{ matrix.cache }},mode=max
          target: gdb-build
          push: true


  publish_containers:
    needs: [setup, build_matrix]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.setup.outputs.publish_config) }}
    steps:
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo "${{ matrix.src }}"

      - run: |
          docker manifest create ghcr.io/cepawiel/test-toolchain-kos:latest \
            --amend ghcr.io/cepawiel/temp-toolchain-kos:sha-1c3282cc89b5ca2be893a8aca08d070212aa87a2-testing-arm64 \
            --amend ghcr.io/cepawiel/temp-toolchain-kos:sha-1c3282cc89b5ca2be893a8aca08d070212aa87a2-testing-amd64
          docker manifest push ghcr.io/cepawiel/test-toolchain-kos:latest